
name: Main

on:
  push:
    paths-ignore:
      - '*.md'
    branches:
      - master
    tags:
      - '**'
  pull_request:
    paths-ignore:
      - '*.md'
    branches:
      - master

#env:
#  CARGO_TERM_COLOR:  always

jobs:
  codestyle:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
        with:
          components: rustfmt
          rust-version: nightly
      - uses: actions/checkout@v2
      - run: cargo fmt --all -- --check

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
        with:
          components: clippy
      - uses: actions/checkout@v2
      - run: cargo clippy --all-targets -- -D clippy::all

  compile:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
      - uses: actions/checkout@v2
      - run: cargo check --all

  test:
    needs: [codestyle, lint, compile]
    strategy:
      matrix:
        rust: [stable, beta, nightly]
    runs-on: ubuntu-latest

    continue-on-error: ${{ matrix.rust != 'stable' }}

    steps:
    - name: Setup Rust
      uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - name: Checkout
      uses: actions/checkout@v2
    - name: Test
      run: cargo test

  publish-docs:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
      - uses: actions/checkout@v2
      - name: Generate Docs
        run: |
          cargo doc --no-deps
          echo "<meta http-equiv=refresh content=0;url=`echo ${{ github.repository  }} | cut -d / -f 2 | tr '-' '_'`/index.html>" > target/doc/index.html
      - name: Publish
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/doc

  publish-crate:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Set up Rust
        uses: hecrj/setup-rust-action@v1
      - uses: actions/checkout@v2
      - name: Publish
        run: |
          pushd dynomite-derive
          cargo publish --token ${{ secrets.CRATES_TOKEN }}
          popd
          # eventual consistency dictates we wait a bit before publishing
          # a crate that depends on the above
          sleep 20
          pushd dynomite
          cargo publish --token ${{ secrets.CRATES_TOKEN }}
          popd
